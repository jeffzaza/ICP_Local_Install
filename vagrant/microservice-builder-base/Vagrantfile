# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

$script = <<SCRIPT
  apt-get update; 
  apt-get --assume-yes install python-software-properties  software-properties-common 
  add-apt-repository   "deb [arch=amd64] https://download.docker.com/linux/debian   $(lsb_release -cs)  stable"
  add-apt-repository   "deb http://http.debian.net/debian jessie-backports main"
  
  apt-get --assume-yes install -t jessie-backports openjdk-8-jre-headless
  apt-get --assume-yes install openjdk-8-jdk
  
  apt-get --assume-yes install  unzip telnet vim net-tools lsof git maven thin-provisioning-tools lvm2 

  cd ~ 
  wget http://ftp.tw.debian.org/debian/pool/main/a/apparmor/libapparmor1_2.9.0-3_amd64.deb
  dpkg -i libapparmor1_2.9.0-3_amd64.deb
  
  wget http://ftp.tw.debian.org/debian/pool/main/libt/libtool/libltdl7_2.4.6-2_amd64.deb
  dpkg -i libltdl7_2.4.6-2_amd64.deb

  wget https://download.docker.com/linux/debian/dists/jessie/pool/stable/amd64/docker-ce_17.03.2~ce-0~debian-jessie_amd64.deb
  dpkg -i docker-ce_17.03.2~ce-0~debian-jessie_amd64.deb


  systemctl start docker
  systemctl enable docker
SCRIPT

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  # copied directly from vagrant init chef/centos-6.5
  config.vm.box = "google/gce"
  
  config.vm.box_check_update = false
  config.vbguest.auto_update = false
  
  # workaround the vagrant 1.8.5 bug
  config.ssh.insert_key = false

  # change memory size
  # config.vm.provider "google" do |v|
    # v.memory = 4000
    # v.customize ['modifyvm', :id, '--memory', '2048', '--cpus', '1', '--cableconnected1', 'on']
    #v.name = "microservice-builder-base"
  #end


  config.vm.provider :google do |google, override|
	  google.google_project_id = "theta-index-158101"
	  google.google_client_email = "jeffzaza-api@theta-index-158101.iam.gserviceaccount.com"
	  google.google_json_key_location = "/home/jeffzazajr/workspace/ICP_Local_Install/vagrant/microservice-builder-base/jeffzaza-private-key.json"

    	  google.name = "microservice-builder-base"


          override.ssh.username = "jeffzazajr"
	  override.ssh.private_key_path = "/home/jeffzazajr/workspace/ICP_Local_Install/vagrant/microservice-builder-base/jeff-local-ubuntu-ssh-key"
	  #override.ssh.private_key_path = "~/.ssh/google_compute_engine"
  end


  # config.vm.boot_timeout = 600
  # Oracle port forwarding
  # config.vm.network "forwarded_port", guest: 1521, host: 1521
  #config.vm.network "public_network", bridge: "en5: Thunderbolt Ethernet", use_dhcp_assigned_default_route: true
  #config.vm.network "public_network", bridge: "en0: Wi-Fi (AirPort)", use_dhcp_assigned_default_route: true
  #config.vm.network "public_network", bridge: "en7: iPhone USB", use_dhcp_assigned_default_route: true
  
  config.vm.network "public_network"
  config.vm.provision "shell", inline: $script

  # Provision everything on the first run
  # config.vm.provision "shell", path: "scripts/install.sh"

  # if Vagrant.has_plugin?("vagrant-proxyconf")
  #   config.proxy.http     = "http://proxy.example.com/"
  #   config.proxy.https    = "http://proxy.example.com/"
  #   config.proxy.no_proxy = "localhost,127.0.0.1"
  # end

end
